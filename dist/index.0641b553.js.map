{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-345af11269774db8.js","src/app.js","node_modules/brotli/decompress.js","node_modules/brotli/dec/decode.js","node_modules/brotli/dec/streams.js","node_modules/brotli/dec/bit_reader.js","node_modules/brotli/dec/dictionary.js","node_modules/brotli/dec/dictionary-browser.js","node_modules/base64-js/index.js","node_modules/brotli/dec/dictionary.bin.js","node_modules/brotli/dec/huffman.js","node_modules/brotli/dec/context.js","node_modules/brotli/dec/prefix.js","node_modules/brotli/dec/transform.js","node_modules/buffer/index.js","node_modules/ieee754/index.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"fe4256060641b553\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets);\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import decompress from \"brotli/decompress\";\n\nfunction decompressPayload(input) {\n  const decompressed = decompress(Buffer.from(input, \"base64\"));\n  const text = new TextDecoder().decode(decompressed);\n  const json = JSON.parse(text);\n  return JSON.stringify(json, undefined, 2);\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const button = document.querySelector(\"button\");\n  const input = document.querySelector(\"#input-text\");\n  const output = document.querySelector(\"#output-text\");\n  button?.addEventListener(\"click\", function () {\n    const inputText = input?.value;\n\n    if (!inputText) {\n      return;\n    }\n\n    const outputText = decompressPayload(inputText);\n    output.value = outputText;\n  }); \n});\n","module.exports = require('./dec/decode').BrotliDecompressBuffer;\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nvar BrotliInput = require('./streams').BrotliInput;\nvar BrotliOutput = require('./streams').BrotliOutput;\nvar BrotliBitReader = require('./bit_reader');\nvar BrotliDictionary = require('./dictionary');\nvar HuffmanCode = require('./huffman').HuffmanCode;\nvar BrotliBuildHuffmanTable = require('./huffman').BrotliBuildHuffmanTable;\nvar Context = require('./context');\nvar Prefix = require('./prefix');\nvar Transform = require('./transform');\n\nvar kDefaultCodeLength = 8;\nvar kCodeLengthRepeatCode = 16;\nvar kNumLiteralCodes = 256;\nvar kNumInsertAndCopyCodes = 704;\nvar kNumBlockLengthCodes = 26;\nvar kLiteralContextBits = 6;\nvar kDistanceContextBits = 2;\n\nvar HUFFMAN_TABLE_BITS = 8;\nvar HUFFMAN_TABLE_MASK = 0xff;\n/* Maximum possible Huffman table size for an alphabet size of 704, max code\n * length 15 and root table bits 8. */\nvar HUFFMAN_MAX_TABLE_SIZE = 1080;\n\nvar CODE_LENGTH_CODES = 18;\nvar kCodeLengthCodeOrder = new Uint8Array([\n  1, 2, 3, 4, 0, 5, 17, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n]);\n\nvar NUM_DISTANCE_SHORT_CODES = 16;\nvar kDistanceShortCodeIndexOffset = new Uint8Array([\n  3, 2, 1, 0, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2\n]);\n\nvar kDistanceShortCodeValueOffset = new Int8Array([\n  0, 0, 0, 0, -1, 1, -2, 2, -3, 3, -1, 1, -2, 2, -3, 3\n]);\n\nvar kMaxHuffmanTableSize = new Uint16Array([\n  256, 402, 436, 468, 500, 534, 566, 598, 630, 662, 694, 726, 758, 790, 822,\n  854, 886, 920, 952, 984, 1016, 1048, 1080\n]);\n\nfunction DecodeWindowBits(br) {\n  var n;\n  if (br.readBits(1) === 0) {\n    return 16;\n  }\n  \n  n = br.readBits(3);\n  if (n > 0) {\n    return 17 + n;\n  }\n  \n  n = br.readBits(3);\n  if (n > 0) {\n    return 8 + n;\n  }\n  \n  return 17;\n}\n\n/* Decodes a number in the range [0..255], by reading 1 - 11 bits. */\nfunction DecodeVarLenUint8(br) {\n  if (br.readBits(1)) {\n    var nbits = br.readBits(3);\n    if (nbits === 0) {\n      return 1;\n    } else {\n      return br.readBits(nbits) + (1 << nbits);\n    }\n  }\n  return 0;\n}\n\nfunction MetaBlockLength() {\n  this.meta_block_length = 0;\n  this.input_end = 0;\n  this.is_uncompressed = 0;\n  this.is_metadata = false;\n}\n\nfunction DecodeMetaBlockLength(br) {\n  var out = new MetaBlockLength;  \n  var size_nibbles;\n  var size_bytes;\n  var i;\n  \n  out.input_end = br.readBits(1);\n  if (out.input_end && br.readBits(1)) {\n    return out;\n  }\n  \n  size_nibbles = br.readBits(2) + 4;\n  if (size_nibbles === 7) {\n    out.is_metadata = true;\n    \n    if (br.readBits(1) !== 0)\n      throw new Error('Invalid reserved bit');\n    \n    size_bytes = br.readBits(2);\n    if (size_bytes === 0)\n      return out;\n    \n    for (i = 0; i < size_bytes; i++) {\n      var next_byte = br.readBits(8);\n      if (i + 1 === size_bytes && size_bytes > 1 && next_byte === 0)\n        throw new Error('Invalid size byte');\n      \n      out.meta_block_length |= next_byte << (i * 8);\n    }\n  } else {\n    for (i = 0; i < size_nibbles; ++i) {\n      var next_nibble = br.readBits(4);\n      if (i + 1 === size_nibbles && size_nibbles > 4 && next_nibble === 0)\n        throw new Error('Invalid size nibble');\n      \n      out.meta_block_length |= next_nibble << (i * 4);\n    }\n  }\n  \n  ++out.meta_block_length;\n  \n  if (!out.input_end && !out.is_metadata) {\n    out.is_uncompressed = br.readBits(1);\n  }\n  \n  return out;\n}\n\n/* Decodes the next Huffman code from bit-stream. */\nfunction ReadSymbol(table, index, br) {\n  var start_index = index;\n  \n  var nbits;\n  br.fillBitWindow();\n  index += (br.val_ >>> br.bit_pos_) & HUFFMAN_TABLE_MASK;\n  nbits = table[index].bits - HUFFMAN_TABLE_BITS;\n  if (nbits > 0) {\n    br.bit_pos_ += HUFFMAN_TABLE_BITS;\n    index += table[index].value;\n    index += (br.val_ >>> br.bit_pos_) & ((1 << nbits) - 1);\n  }\n  br.bit_pos_ += table[index].bits;\n  return table[index].value;\n}\n\nfunction ReadHuffmanCodeLengths(code_length_code_lengths, num_symbols, code_lengths, br) {\n  var symbol = 0;\n  var prev_code_len = kDefaultCodeLength;\n  var repeat = 0;\n  var repeat_code_len = 0;\n  var space = 32768;\n  \n  var table = [];\n  for (var i = 0; i < 32; i++)\n    table.push(new HuffmanCode(0, 0));\n  \n  BrotliBuildHuffmanTable(table, 0, 5, code_length_code_lengths, CODE_LENGTH_CODES);\n\n  while (symbol < num_symbols && space > 0) {\n    var p = 0;\n    var code_len;\n    \n    br.readMoreInput();\n    br.fillBitWindow();\n    p += (br.val_ >>> br.bit_pos_) & 31;\n    br.bit_pos_ += table[p].bits;\n    code_len = table[p].value & 0xff;\n    if (code_len < kCodeLengthRepeatCode) {\n      repeat = 0;\n      code_lengths[symbol++] = code_len;\n      if (code_len !== 0) {\n        prev_code_len = code_len;\n        space -= 32768 >> code_len;\n      }\n    } else {\n      var extra_bits = code_len - 14;\n      var old_repeat;\n      var repeat_delta;\n      var new_len = 0;\n      if (code_len === kCodeLengthRepeatCode) {\n        new_len = prev_code_len;\n      }\n      if (repeat_code_len !== new_len) {\n        repeat = 0;\n        repeat_code_len = new_len;\n      }\n      old_repeat = repeat;\n      if (repeat > 0) {\n        repeat -= 2;\n        repeat <<= extra_bits;\n      }\n      repeat += br.readBits(extra_bits) + 3;\n      repeat_delta = repeat - old_repeat;\n      if (symbol + repeat_delta > num_symbols) {\n        throw new Error('[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols');\n      }\n      \n      for (var x = 0; x < repeat_delta; x++)\n        code_lengths[symbol + x] = repeat_code_len;\n      \n      symbol += repeat_delta;\n      \n      if (repeat_code_len !== 0) {\n        space -= repeat_delta << (15 - repeat_code_len);\n      }\n    }\n  }\n  if (space !== 0) {\n    throw new Error(\"[ReadHuffmanCodeLengths] space = \" + space);\n  }\n  \n  for (; symbol < num_symbols; symbol++)\n    code_lengths[symbol] = 0;\n}\n\nfunction ReadHuffmanCode(alphabet_size, tables, table, br) {\n  var table_size = 0;\n  var simple_code_or_skip;\n  var code_lengths = new Uint8Array(alphabet_size);\n  \n  br.readMoreInput();\n  \n  /* simple_code_or_skip is used as follows:\n     1 for simple code;\n     0 for no skipping, 2 skips 2 code lengths, 3 skips 3 code lengths */\n  simple_code_or_skip = br.readBits(2);\n  if (simple_code_or_skip === 1) {\n    /* Read symbols, codes & code lengths directly. */\n    var i;\n    var max_bits_counter = alphabet_size - 1;\n    var max_bits = 0;\n    var symbols = new Int32Array(4);\n    var num_symbols = br.readBits(2) + 1;\n    while (max_bits_counter) {\n      max_bits_counter >>= 1;\n      ++max_bits;\n    }\n\n    for (i = 0; i < num_symbols; ++i) {\n      symbols[i] = br.readBits(max_bits) % alphabet_size;\n      code_lengths[symbols[i]] = 2;\n    }\n    code_lengths[symbols[0]] = 1;\n    switch (num_symbols) {\n      case 1:\n        break;\n      case 3:\n        if ((symbols[0] === symbols[1]) ||\n            (symbols[0] === symbols[2]) ||\n            (symbols[1] === symbols[2])) {\n          throw new Error('[ReadHuffmanCode] invalid symbols');\n        }\n        break;\n      case 2:\n        if (symbols[0] === symbols[1]) {\n          throw new Error('[ReadHuffmanCode] invalid symbols');\n        }\n        \n        code_lengths[symbols[1]] = 1;\n        break;\n      case 4:\n        if ((symbols[0] === symbols[1]) ||\n            (symbols[0] === symbols[2]) ||\n            (symbols[0] === symbols[3]) ||\n            (symbols[1] === symbols[2]) ||\n            (symbols[1] === symbols[3]) ||\n            (symbols[2] === symbols[3])) {\n          throw new Error('[ReadHuffmanCode] invalid symbols');\n        }\n        \n        if (br.readBits(1)) {\n          code_lengths[symbols[2]] = 3;\n          code_lengths[symbols[3]] = 3;\n        } else {\n          code_lengths[symbols[0]] = 2;\n        }\n        break;\n    }\n  } else {  /* Decode Huffman-coded code lengths. */\n    var i;\n    var code_length_code_lengths = new Uint8Array(CODE_LENGTH_CODES);\n    var space = 32;\n    var num_codes = 0;\n    /* Static Huffman code for the code length code lengths */\n    var huff = [\n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(3, 2), \n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(4, 1),\n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(3, 2), \n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(4, 5)\n    ];\n    for (i = simple_code_or_skip; i < CODE_LENGTH_CODES && space > 0; ++i) {\n      var code_len_idx = kCodeLengthCodeOrder[i];\n      var p = 0;\n      var v;\n      br.fillBitWindow();\n      p += (br.val_ >>> br.bit_pos_) & 15;\n      br.bit_pos_ += huff[p].bits;\n      v = huff[p].value;\n      code_length_code_lengths[code_len_idx] = v;\n      if (v !== 0) {\n        space -= (32 >> v);\n        ++num_codes;\n      }\n    }\n    \n    if (!(num_codes === 1 || space === 0))\n      throw new Error('[ReadHuffmanCode] invalid num_codes or space');\n    \n    ReadHuffmanCodeLengths(code_length_code_lengths, alphabet_size, code_lengths, br);\n  }\n  \n  table_size = BrotliBuildHuffmanTable(tables, table, HUFFMAN_TABLE_BITS, code_lengths, alphabet_size);\n  \n  if (table_size === 0) {\n    throw new Error(\"[ReadHuffmanCode] BuildHuffmanTable failed: \");\n  }\n  \n  return table_size;\n}\n\nfunction ReadBlockLength(table, index, br) {\n  var code;\n  var nbits;\n  code = ReadSymbol(table, index, br);\n  nbits = Prefix.kBlockLengthPrefixCode[code].nbits;\n  return Prefix.kBlockLengthPrefixCode[code].offset + br.readBits(nbits);\n}\n\nfunction TranslateShortCodes(code, ringbuffer, index) {\n  var val;\n  if (code < NUM_DISTANCE_SHORT_CODES) {\n    index += kDistanceShortCodeIndexOffset[code];\n    index &= 3;\n    val = ringbuffer[index] + kDistanceShortCodeValueOffset[code];\n  } else {\n    val = code - NUM_DISTANCE_SHORT_CODES + 1;\n  }\n  return val;\n}\n\nfunction MoveToFront(v, index) {\n  var value = v[index];\n  var i = index;\n  for (; i; --i) v[i] = v[i - 1];\n  v[0] = value;\n}\n\nfunction InverseMoveToFrontTransform(v, v_len) {\n  var mtf = new Uint8Array(256);\n  var i;\n  for (i = 0; i < 256; ++i) {\n    mtf[i] = i;\n  }\n  for (i = 0; i < v_len; ++i) {\n    var index = v[i];\n    v[i] = mtf[index];\n    if (index) MoveToFront(mtf, index);\n  }\n}\n\n/* Contains a collection of huffman trees with the same alphabet size. */\nfunction HuffmanTreeGroup(alphabet_size, num_htrees) {\n  this.alphabet_size = alphabet_size;\n  this.num_htrees = num_htrees;\n  this.codes = new Array(num_htrees + num_htrees * kMaxHuffmanTableSize[(alphabet_size + 31) >>> 5]);  \n  this.htrees = new Uint32Array(num_htrees);\n}\n\nHuffmanTreeGroup.prototype.decode = function(br) {\n  var i;\n  var table_size;\n  var next = 0;\n  for (i = 0; i < this.num_htrees; ++i) {\n    this.htrees[i] = next;\n    table_size = ReadHuffmanCode(this.alphabet_size, this.codes, next, br);\n    next += table_size;\n  }\n};\n\nfunction DecodeContextMap(context_map_size, br) {\n  var out = { num_htrees: null, context_map: null };\n  var use_rle_for_zeros;\n  var max_run_length_prefix = 0;\n  var table;\n  var i;\n  \n  br.readMoreInput();\n  var num_htrees = out.num_htrees = DecodeVarLenUint8(br) + 1;\n\n  var context_map = out.context_map = new Uint8Array(context_map_size);\n  if (num_htrees <= 1) {\n    return out;\n  }\n\n  use_rle_for_zeros = br.readBits(1);\n  if (use_rle_for_zeros) {\n    max_run_length_prefix = br.readBits(4) + 1;\n  }\n  \n  table = [];\n  for (i = 0; i < HUFFMAN_MAX_TABLE_SIZE; i++) {\n    table[i] = new HuffmanCode(0, 0);\n  }\n  \n  ReadHuffmanCode(num_htrees + max_run_length_prefix, table, 0, br);\n  \n  for (i = 0; i < context_map_size;) {\n    var code;\n\n    br.readMoreInput();\n    code = ReadSymbol(table, 0, br);\n    if (code === 0) {\n      context_map[i] = 0;\n      ++i;\n    } else if (code <= max_run_length_prefix) {\n      var reps = 1 + (1 << code) + br.readBits(code);\n      while (--reps) {\n        if (i >= context_map_size) {\n          throw new Error(\"[DecodeContextMap] i >= context_map_size\");\n        }\n        context_map[i] = 0;\n        ++i;\n      }\n    } else {\n      context_map[i] = code - max_run_length_prefix;\n      ++i;\n    }\n  }\n  if (br.readBits(1)) {\n    InverseMoveToFrontTransform(context_map, context_map_size);\n  }\n  \n  return out;\n}\n\nfunction DecodeBlockType(max_block_type, trees, tree_type, block_types, ringbuffers, indexes, br) {\n  var ringbuffer = tree_type * 2;\n  var index = tree_type;\n  var type_code = ReadSymbol(trees, tree_type * HUFFMAN_MAX_TABLE_SIZE, br);\n  var block_type;\n  if (type_code === 0) {\n    block_type = ringbuffers[ringbuffer + (indexes[index] & 1)];\n  } else if (type_code === 1) {\n    block_type = ringbuffers[ringbuffer + ((indexes[index] - 1) & 1)] + 1;\n  } else {\n    block_type = type_code - 2;\n  }\n  if (block_type >= max_block_type) {\n    block_type -= max_block_type;\n  }\n  block_types[tree_type] = block_type;\n  ringbuffers[ringbuffer + (indexes[index] & 1)] = block_type;\n  ++indexes[index];\n}\n\nfunction CopyUncompressedBlockToOutput(output, len, pos, ringbuffer, ringbuffer_mask, br) {\n  var rb_size = ringbuffer_mask + 1;\n  var rb_pos = pos & ringbuffer_mask;\n  var br_pos = br.pos_ & BrotliBitReader.IBUF_MASK;\n  var nbytes;\n\n  /* For short lengths copy byte-by-byte */\n  if (len < 8 || br.bit_pos_ + (len << 3) < br.bit_end_pos_) {\n    while (len-- > 0) {\n      br.readMoreInput();\n      ringbuffer[rb_pos++] = br.readBits(8);\n      if (rb_pos === rb_size) {\n        output.write(ringbuffer, rb_size);\n        rb_pos = 0;\n      }\n    }\n    return;\n  }\n\n  if (br.bit_end_pos_ < 32) {\n    throw new Error('[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32');\n  }\n\n  /* Copy remaining 0-4 bytes from br.val_ to ringbuffer. */\n  while (br.bit_pos_ < 32) {\n    ringbuffer[rb_pos] = (br.val_ >>> br.bit_pos_);\n    br.bit_pos_ += 8;\n    ++rb_pos;\n    --len;\n  }\n\n  /* Copy remaining bytes from br.buf_ to ringbuffer. */\n  nbytes = (br.bit_end_pos_ - br.bit_pos_) >> 3;\n  if (br_pos + nbytes > BrotliBitReader.IBUF_MASK) {\n    var tail = BrotliBitReader.IBUF_MASK + 1 - br_pos;\n    for (var x = 0; x < tail; x++)\n      ringbuffer[rb_pos + x] = br.buf_[br_pos + x];\n    \n    nbytes -= tail;\n    rb_pos += tail;\n    len -= tail;\n    br_pos = 0;\n  }\n\n  for (var x = 0; x < nbytes; x++)\n    ringbuffer[rb_pos + x] = br.buf_[br_pos + x];\n  \n  rb_pos += nbytes;\n  len -= nbytes;\n\n  /* If we wrote past the logical end of the ringbuffer, copy the tail of the\n     ringbuffer to its beginning and flush the ringbuffer to the output. */\n  if (rb_pos >= rb_size) {\n    output.write(ringbuffer, rb_size);\n    rb_pos -= rb_size;    \n    for (var x = 0; x < rb_pos; x++)\n      ringbuffer[x] = ringbuffer[rb_size + x];\n  }\n\n  /* If we have more to copy than the remaining size of the ringbuffer, then we\n     first fill the ringbuffer from the input and then flush the ringbuffer to\n     the output */\n  while (rb_pos + len >= rb_size) {\n    nbytes = rb_size - rb_pos;\n    if (br.input_.read(ringbuffer, rb_pos, nbytes) < nbytes) {\n      throw new Error('[CopyUncompressedBlockToOutput] not enough bytes');\n    }\n    output.write(ringbuffer, rb_size);\n    len -= nbytes;\n    rb_pos = 0;\n  }\n\n  /* Copy straight from the input onto the ringbuffer. The ringbuffer will be\n     flushed to the output at a later time. */\n  if (br.input_.read(ringbuffer, rb_pos, len) < len) {\n    throw new Error('[CopyUncompressedBlockToOutput] not enough bytes');\n  }\n\n  /* Restore the state of the bit reader. */\n  br.reset();\n}\n\n/* Advances the bit reader position to the next byte boundary and verifies\n   that any skipped bits are set to zero. */\nfunction JumpToByteBoundary(br) {\n  var new_bit_pos = (br.bit_pos_ + 7) & ~7;\n  var pad_bits = br.readBits(new_bit_pos - br.bit_pos_);\n  return pad_bits == 0;\n}\n\nfunction BrotliDecompressedSize(buffer) {\n  var input = new BrotliInput(buffer);\n  var br = new BrotliBitReader(input);\n  DecodeWindowBits(br);\n  var out = DecodeMetaBlockLength(br);\n  return out.meta_block_length;\n}\n\nexports.BrotliDecompressedSize = BrotliDecompressedSize;\n\nfunction BrotliDecompressBuffer(buffer, output_size) {\n  var input = new BrotliInput(buffer);\n  \n  if (output_size == null) {\n    output_size = BrotliDecompressedSize(buffer);\n  }\n  \n  var output_buffer = new Uint8Array(output_size);\n  var output = new BrotliOutput(output_buffer);\n  \n  BrotliDecompress(input, output);\n  \n  if (output.pos < output.buffer.length) {\n    output.buffer = output.buffer.subarray(0, output.pos);\n  }\n  \n  return output.buffer;\n}\n\nexports.BrotliDecompressBuffer = BrotliDecompressBuffer;\n\nfunction BrotliDecompress(input, output) {\n  var i;\n  var pos = 0;\n  var input_end = 0;\n  var window_bits = 0;\n  var max_backward_distance;\n  var max_distance = 0;\n  var ringbuffer_size;\n  var ringbuffer_mask;\n  var ringbuffer;\n  var ringbuffer_end;\n  /* This ring buffer holds a few past copy distances that will be used by */\n  /* some special distance codes. */\n  var dist_rb = [ 16, 15, 11, 4 ];\n  var dist_rb_idx = 0;\n  /* The previous 2 bytes used for context. */\n  var prev_byte1 = 0;\n  var prev_byte2 = 0;\n  var hgroup = [new HuffmanTreeGroup(0, 0), new HuffmanTreeGroup(0, 0), new HuffmanTreeGroup(0, 0)];\n  var block_type_trees;\n  var block_len_trees;\n  var br;\n\n  /* We need the slack region for the following reasons:\n       - always doing two 8-byte copies for fast backward copying\n       - transforms\n       - flushing the input ringbuffer when decoding uncompressed blocks */\n  var kRingBufferWriteAheadSlack = 128 + BrotliBitReader.READ_SIZE;\n\n  br = new BrotliBitReader(input);\n\n  /* Decode window size. */\n  window_bits = DecodeWindowBits(br);\n  max_backward_distance = (1 << window_bits) - 16;\n\n  ringbuffer_size = 1 << window_bits;\n  ringbuffer_mask = ringbuffer_size - 1;\n  ringbuffer = new Uint8Array(ringbuffer_size + kRingBufferWriteAheadSlack + BrotliDictionary.maxDictionaryWordLength);\n  ringbuffer_end = ringbuffer_size;\n\n  block_type_trees = [];\n  block_len_trees = [];\n  for (var x = 0; x < 3 * HUFFMAN_MAX_TABLE_SIZE; x++) {\n    block_type_trees[x] = new HuffmanCode(0, 0);\n    block_len_trees[x] = new HuffmanCode(0, 0);\n  }\n\n  while (!input_end) {\n    var meta_block_remaining_len = 0;\n    var is_uncompressed;\n    var block_length = [ 1 << 28, 1 << 28, 1 << 28 ];\n    var block_type = [ 0 ];\n    var num_block_types = [ 1, 1, 1 ];\n    var block_type_rb = [ 0, 1, 0, 1, 0, 1 ];\n    var block_type_rb_index = [ 0 ];\n    var distance_postfix_bits;\n    var num_direct_distance_codes;\n    var distance_postfix_mask;\n    var num_distance_codes;\n    var context_map = null;\n    var context_modes = null;\n    var num_literal_htrees;\n    var dist_context_map = null;\n    var num_dist_htrees;\n    var context_offset = 0;\n    var context_map_slice = null;\n    var literal_htree_index = 0;\n    var dist_context_offset = 0;\n    var dist_context_map_slice = null;\n    var dist_htree_index = 0;\n    var context_lookup_offset1 = 0;\n    var context_lookup_offset2 = 0;\n    var context_mode;\n    var htree_command;\n\n    for (i = 0; i < 3; ++i) {\n      hgroup[i].codes = null;\n      hgroup[i].htrees = null;\n    }\n\n    br.readMoreInput();\n    \n    var _out = DecodeMetaBlockLength(br);\n    meta_block_remaining_len = _out.meta_block_length;\n    if (pos + meta_block_remaining_len > output.buffer.length) {\n      /* We need to grow the output buffer to fit the additional data. */\n      var tmp = new Uint8Array( pos + meta_block_remaining_len );\n      tmp.set( output.buffer );\n      output.buffer = tmp;\n    }    \n    input_end = _out.input_end;\n    is_uncompressed = _out.is_uncompressed;\n    \n    if (_out.is_metadata) {\n      JumpToByteBoundary(br);\n      \n      for (; meta_block_remaining_len > 0; --meta_block_remaining_len) {\n        br.readMoreInput();\n        /* Read one byte and ignore it. */\n        br.readBits(8);\n      }\n      \n      continue;\n    }\n    \n    if (meta_block_remaining_len === 0) {\n      continue;\n    }\n    \n    if (is_uncompressed) {\n      br.bit_pos_ = (br.bit_pos_ + 7) & ~7;\n      CopyUncompressedBlockToOutput(output, meta_block_remaining_len, pos,\n                                    ringbuffer, ringbuffer_mask, br);\n      pos += meta_block_remaining_len;\n      continue;\n    }\n    \n    for (i = 0; i < 3; ++i) {\n      num_block_types[i] = DecodeVarLenUint8(br) + 1;\n      if (num_block_types[i] >= 2) {\n        ReadHuffmanCode(num_block_types[i] + 2, block_type_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);\n        ReadHuffmanCode(kNumBlockLengthCodes, block_len_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);\n        block_length[i] = ReadBlockLength(block_len_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);\n        block_type_rb_index[i] = 1;\n      }\n    }\n    \n    br.readMoreInput();\n    \n    distance_postfix_bits = br.readBits(2);\n    num_direct_distance_codes = NUM_DISTANCE_SHORT_CODES + (br.readBits(4) << distance_postfix_bits);\n    distance_postfix_mask = (1 << distance_postfix_bits) - 1;\n    num_distance_codes = (num_direct_distance_codes + (48 << distance_postfix_bits));\n    context_modes = new Uint8Array(num_block_types[0]);\n\n    for (i = 0; i < num_block_types[0]; ++i) {\n       br.readMoreInput();\n       context_modes[i] = (br.readBits(2) << 1);\n    }\n    \n    var _o1 = DecodeContextMap(num_block_types[0] << kLiteralContextBits, br);\n    num_literal_htrees = _o1.num_htrees;\n    context_map = _o1.context_map;\n    \n    var _o2 = DecodeContextMap(num_block_types[2] << kDistanceContextBits, br);\n    num_dist_htrees = _o2.num_htrees;\n    dist_context_map = _o2.context_map;\n    \n    hgroup[0] = new HuffmanTreeGroup(kNumLiteralCodes, num_literal_htrees);\n    hgroup[1] = new HuffmanTreeGroup(kNumInsertAndCopyCodes, num_block_types[1]);\n    hgroup[2] = new HuffmanTreeGroup(num_distance_codes, num_dist_htrees);\n\n    for (i = 0; i < 3; ++i) {\n      hgroup[i].decode(br);\n    }\n\n    context_map_slice = 0;\n    dist_context_map_slice = 0;\n    context_mode = context_modes[block_type[0]];\n    context_lookup_offset1 = Context.lookupOffsets[context_mode];\n    context_lookup_offset2 = Context.lookupOffsets[context_mode + 1];\n    htree_command = hgroup[1].htrees[0];\n\n    while (meta_block_remaining_len > 0) {\n      var cmd_code;\n      var range_idx;\n      var insert_code;\n      var copy_code;\n      var insert_length;\n      var copy_length;\n      var distance_code;\n      var distance;\n      var context;\n      var j;\n      var copy_dst;\n\n      br.readMoreInput();\n      \n      if (block_length[1] === 0) {\n        DecodeBlockType(num_block_types[1],\n                        block_type_trees, 1, block_type, block_type_rb,\n                        block_type_rb_index, br);\n        block_length[1] = ReadBlockLength(block_len_trees, HUFFMAN_MAX_TABLE_SIZE, br);\n        htree_command = hgroup[1].htrees[block_type[1]];\n      }\n      --block_length[1];\n      cmd_code = ReadSymbol(hgroup[1].codes, htree_command, br);\n      range_idx = cmd_code >> 6;\n      if (range_idx >= 2) {\n        range_idx -= 2;\n        distance_code = -1;\n      } else {\n        distance_code = 0;\n      }\n      insert_code = Prefix.kInsertRangeLut[range_idx] + ((cmd_code >> 3) & 7);\n      copy_code = Prefix.kCopyRangeLut[range_idx] + (cmd_code & 7);\n      insert_length = Prefix.kInsertLengthPrefixCode[insert_code].offset +\n          br.readBits(Prefix.kInsertLengthPrefixCode[insert_code].nbits);\n      copy_length = Prefix.kCopyLengthPrefixCode[copy_code].offset +\n          br.readBits(Prefix.kCopyLengthPrefixCode[copy_code].nbits);\n      prev_byte1 = ringbuffer[pos-1 & ringbuffer_mask];\n      prev_byte2 = ringbuffer[pos-2 & ringbuffer_mask];\n      for (j = 0; j < insert_length; ++j) {\n        br.readMoreInput();\n\n        if (block_length[0] === 0) {\n          DecodeBlockType(num_block_types[0],\n                          block_type_trees, 0, block_type, block_type_rb,\n                          block_type_rb_index, br);\n          block_length[0] = ReadBlockLength(block_len_trees, 0, br);\n          context_offset = block_type[0] << kLiteralContextBits;\n          context_map_slice = context_offset;\n          context_mode = context_modes[block_type[0]];\n          context_lookup_offset1 = Context.lookupOffsets[context_mode];\n          context_lookup_offset2 = Context.lookupOffsets[context_mode + 1];\n        }\n        context = (Context.lookup[context_lookup_offset1 + prev_byte1] |\n                   Context.lookup[context_lookup_offset2 + prev_byte2]);\n        literal_htree_index = context_map[context_map_slice + context];\n        --block_length[0];\n        prev_byte2 = prev_byte1;\n        prev_byte1 = ReadSymbol(hgroup[0].codes, hgroup[0].htrees[literal_htree_index], br);\n        ringbuffer[pos & ringbuffer_mask] = prev_byte1;\n        if ((pos & ringbuffer_mask) === ringbuffer_mask) {\n          output.write(ringbuffer, ringbuffer_size);\n        }\n        ++pos;\n      }\n      meta_block_remaining_len -= insert_length;\n      if (meta_block_remaining_len <= 0) break;\n\n      if (distance_code < 0) {\n        var context;\n        \n        br.readMoreInput();\n        if (block_length[2] === 0) {\n          DecodeBlockType(num_block_types[2],\n                          block_type_trees, 2, block_type, block_type_rb,\n                          block_type_rb_index, br);\n          block_length[2] = ReadBlockLength(block_len_trees, 2 * HUFFMAN_MAX_TABLE_SIZE, br);\n          dist_context_offset = block_type[2] << kDistanceContextBits;\n          dist_context_map_slice = dist_context_offset;\n        }\n        --block_length[2];\n        context = (copy_length > 4 ? 3 : copy_length - 2) & 0xff;\n        dist_htree_index = dist_context_map[dist_context_map_slice + context];\n        distance_code = ReadSymbol(hgroup[2].codes, hgroup[2].htrees[dist_htree_index], br);\n        if (distance_code >= num_direct_distance_codes) {\n          var nbits;\n          var postfix;\n          var offset;\n          distance_code -= num_direct_distance_codes;\n          postfix = distance_code & distance_postfix_mask;\n          distance_code >>= distance_postfix_bits;\n          nbits = (distance_code >> 1) + 1;\n          offset = ((2 + (distance_code & 1)) << nbits) - 4;\n          distance_code = num_direct_distance_codes +\n              ((offset + br.readBits(nbits)) <<\n               distance_postfix_bits) + postfix;\n        }\n      }\n\n      /* Convert the distance code to the actual distance by possibly looking */\n      /* up past distnaces from the ringbuffer. */\n      distance = TranslateShortCodes(distance_code, dist_rb, dist_rb_idx);\n      if (distance < 0) {\n        throw new Error('[BrotliDecompress] invalid distance');\n      }\n\n      if (pos < max_backward_distance &&\n          max_distance !== max_backward_distance) {\n        max_distance = pos;\n      } else {\n        max_distance = max_backward_distance;\n      }\n\n      copy_dst = pos & ringbuffer_mask;\n\n      if (distance > max_distance) {\n        if (copy_length >= BrotliDictionary.minDictionaryWordLength &&\n            copy_length <= BrotliDictionary.maxDictionaryWordLength) {\n          var offset = BrotliDictionary.offsetsByLength[copy_length];\n          var word_id = distance - max_distance - 1;\n          var shift = BrotliDictionary.sizeBitsByLength[copy_length];\n          var mask = (1 << shift) - 1;\n          var word_idx = word_id & mask;\n          var transform_idx = word_id >> shift;\n          offset += word_idx * copy_length;\n          if (transform_idx < Transform.kNumTransforms) {\n            var len = Transform.transformDictionaryWord(ringbuffer, copy_dst, offset, copy_length, transform_idx);\n            copy_dst += len;\n            pos += len;\n            meta_block_remaining_len -= len;\n            if (copy_dst >= ringbuffer_end) {\n              output.write(ringbuffer, ringbuffer_size);\n              \n              for (var _x = 0; _x < (copy_dst - ringbuffer_end); _x++)\n                ringbuffer[_x] = ringbuffer[ringbuffer_end + _x];\n            }\n          } else {\n            throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance +\n              \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n          }\n        } else {\n          throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance +\n            \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n        }\n      } else {\n        if (distance_code > 0) {\n          dist_rb[dist_rb_idx & 3] = distance;\n          ++dist_rb_idx;\n        }\n\n        if (copy_length > meta_block_remaining_len) {\n          throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance +\n            \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n        }\n\n        for (j = 0; j < copy_length; ++j) {\n          ringbuffer[pos & ringbuffer_mask] = ringbuffer[(pos - distance) & ringbuffer_mask];\n          if ((pos & ringbuffer_mask) === ringbuffer_mask) {\n            output.write(ringbuffer, ringbuffer_size);\n          }\n          ++pos;\n          --meta_block_remaining_len;\n        }\n      }\n\n      /* When we get here, we must have inserted at least one literal and */\n      /* made a copy of at least length two, therefore accessing the last 2 */\n      /* bytes is valid. */\n      prev_byte1 = ringbuffer[(pos - 1) & ringbuffer_mask];\n      prev_byte2 = ringbuffer[(pos - 2) & ringbuffer_mask];\n    }\n\n    /* Protect pos from overflow, wrap it around at every GB of input data */\n    pos &= 0x3fffffff;\n  }\n\n  output.write(ringbuffer, pos & ringbuffer_mask);\n}\n\nexports.BrotliDecompress = BrotliDecompress;\n\nBrotliDictionary.init();\n","function BrotliInput(buffer) {\n  this.buffer = buffer;\n  this.pos = 0;\n}\n\nBrotliInput.prototype.read = function(buf, i, count) {\n  if (this.pos + count > this.buffer.length) {\n    count = this.buffer.length - this.pos;\n  }\n  \n  for (var p = 0; p < count; p++)\n    buf[i + p] = this.buffer[this.pos + p];\n  \n  this.pos += count;\n  return count;\n}\n\nexports.BrotliInput = BrotliInput;\n\nfunction BrotliOutput(buf) {\n  this.buffer = buf;\n  this.pos = 0;\n}\n\nBrotliOutput.prototype.write = function(buf, count) {\n  if (this.pos + count > this.buffer.length)\n    throw new Error('Output buffer is not large enough');\n  \n  this.buffer.set(buf.subarray(0, count), this.pos);\n  this.pos += count;\n  return count;\n};\n\nexports.BrotliOutput = BrotliOutput;\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Bit reading helpers\n*/\n\nvar BROTLI_READ_SIZE = 4096;\nvar BROTLI_IBUF_SIZE =  (2 * BROTLI_READ_SIZE + 32);\nvar BROTLI_IBUF_MASK =  (2 * BROTLI_READ_SIZE - 1);\n\nvar kBitMask = new Uint32Array([\n  0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767,\n  65535, 131071, 262143, 524287, 1048575, 2097151, 4194303, 8388607, 16777215\n]);\n\n/* Input byte buffer, consist of a ringbuffer and a \"slack\" region where */\n/* bytes from the start of the ringbuffer are copied. */\nfunction BrotliBitReader(input) {\n  this.buf_ = new Uint8Array(BROTLI_IBUF_SIZE);\n  this.input_ = input;    /* input callback */\n  \n  this.reset();\n}\n\nBrotliBitReader.READ_SIZE = BROTLI_READ_SIZE;\nBrotliBitReader.IBUF_MASK = BROTLI_IBUF_MASK;\n\nBrotliBitReader.prototype.reset = function() {\n  this.buf_ptr_ = 0;      /* next input will write here */\n  this.val_ = 0;          /* pre-fetched bits */\n  this.pos_ = 0;          /* byte position in stream */\n  this.bit_pos_ = 0;      /* current bit-reading position in val_ */\n  this.bit_end_pos_ = 0;  /* bit-reading end position from LSB of val_ */\n  this.eos_ = 0;          /* input stream is finished */\n  \n  this.readMoreInput();\n  for (var i = 0; i < 4; i++) {\n    this.val_ |= this.buf_[this.pos_] << (8 * i);\n    ++this.pos_;\n  }\n  \n  return this.bit_end_pos_ > 0;\n};\n\n/* Fills up the input ringbuffer by calling the input callback.\n\n   Does nothing if there are at least 32 bytes present after current position.\n\n   Returns 0 if either:\n    - the input callback returned an error, or\n    - there is no more input and the position is past the end of the stream.\n\n   After encountering the end of the input stream, 32 additional zero bytes are\n   copied to the ringbuffer, therefore it is safe to call this function after\n   every 32 bytes of input is read.\n*/\nBrotliBitReader.prototype.readMoreInput = function() {\n  if (this.bit_end_pos_ > 256) {\n    return;\n  } else if (this.eos_) {\n    if (this.bit_pos_ > this.bit_end_pos_)\n      throw new Error('Unexpected end of input ' + this.bit_pos_ + ' ' + this.bit_end_pos_);\n  } else {\n    var dst = this.buf_ptr_;\n    var bytes_read = this.input_.read(this.buf_, dst, BROTLI_READ_SIZE);\n    if (bytes_read < 0) {\n      throw new Error('Unexpected end of input');\n    }\n    \n    if (bytes_read < BROTLI_READ_SIZE) {\n      this.eos_ = 1;\n      /* Store 32 bytes of zero after the stream end. */\n      for (var p = 0; p < 32; p++)\n        this.buf_[dst + bytes_read + p] = 0;\n    }\n    \n    if (dst === 0) {\n      /* Copy the head of the ringbuffer to the slack region. */\n      for (var p = 0; p < 32; p++)\n        this.buf_[(BROTLI_READ_SIZE << 1) + p] = this.buf_[p];\n\n      this.buf_ptr_ = BROTLI_READ_SIZE;\n    } else {\n      this.buf_ptr_ = 0;\n    }\n    \n    this.bit_end_pos_ += bytes_read << 3;\n  }\n};\n\n/* Guarantees that there are at least 24 bits in the buffer. */\nBrotliBitReader.prototype.fillBitWindow = function() {    \n  while (this.bit_pos_ >= 8) {\n    this.val_ >>>= 8;\n    this.val_ |= this.buf_[this.pos_ & BROTLI_IBUF_MASK] << 24;\n    ++this.pos_;\n    this.bit_pos_ = this.bit_pos_ - 8 >>> 0;\n    this.bit_end_pos_ = this.bit_end_pos_ - 8 >>> 0;\n  }\n};\n\n/* Reads the specified number of bits from Read Buffer. */\nBrotliBitReader.prototype.readBits = function(n_bits) {\n  if (32 - this.bit_pos_ < n_bits) {\n    this.fillBitWindow();\n  }\n  \n  var val = ((this.val_ >>> this.bit_pos_) & kBitMask[n_bits]);\n  this.bit_pos_ += n_bits;\n  return val;\n};\n\nmodule.exports = BrotliBitReader;\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Collection of static dictionary words.\n*/\n\nvar data = require('./dictionary-data');\nexports.init = function() {\n  exports.dictionary = data.init();\n};\n\nexports.offsetsByLength = new Uint32Array([\n     0,     0,     0,     0,     0,  4096,  9216, 21504, 35840, 44032,\n 53248, 63488, 74752, 87040, 93696, 100864, 104704, 106752, 108928, 113536,\n 115968, 118528, 119872, 121280, 122016,\n]);\n\nexports.sizeBitsByLength = new Uint8Array([\n  0,  0,  0,  0, 10, 10, 11, 11, 10, 10,\n 10, 10, 10,  9,  9,  8,  7,  7,  8,  7,\n  7,  6,  6,  5,  5,\n]);\n\nexports.minDictionaryWordLength = 4;\nexports.maxDictionaryWordLength = 24;\n","var base64 = require('base64-js');\n\n/**\n * The normal dictionary-data.js is quite large, which makes it \n * unsuitable for browser usage. In order to make it smaller, \n * we read dictionary.bin, which is a compressed version of\n * the dictionary, and on initial load, Brotli decompresses \n * it's own dictionary. 😜\n */\nexports.init = function() {\n  var BrotliDecompressBuffer = require('./decode').BrotliDecompressBuffer;\n  var compressed = base64.toByteArray(require('./dictionary.bin.js'));\n  return BrotliDecompressBuffer(compressed);\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","module.exports=\"\";\n","function HuffmanCode(bits, value) {\n  this.bits = bits;   /* number of bits used for this symbol */\n  this.value = value; /* symbol value or table offset */\n}\n\nexports.HuffmanCode = HuffmanCode;\n\nvar MAX_LENGTH = 15;\n\n/* Returns reverse(reverse(key, len) + 1, len), where reverse(key, len) is the\n   bit-wise reversal of the len least significant bits of key. */\nfunction GetNextKey(key, len) {\n  var step = 1 << (len - 1);\n  while (key & step) {\n    step >>= 1;\n  }\n  return (key & (step - 1)) + step;\n}\n\n/* Stores code in table[0], table[step], table[2*step], ..., table[end] */\n/* Assumes that end is an integer multiple of step */\nfunction ReplicateValue(table, i, step, end, code) {\n  do {\n    end -= step;\n    table[i + end] = new HuffmanCode(code.bits, code.value);\n  } while (end > 0);\n}\n\n/* Returns the table width of the next 2nd level table. count is the histogram\n   of bit lengths for the remaining symbols, len is the code length of the next\n   processed symbol */\nfunction NextTableBitSize(count, len, root_bits) {\n  var left = 1 << (len - root_bits);\n  while (len < MAX_LENGTH) {\n    left -= count[len];\n    if (left <= 0) break;\n    ++len;\n    left <<= 1;\n  }\n  return len - root_bits;\n}\n\nexports.BrotliBuildHuffmanTable = function(root_table, table, root_bits, code_lengths, code_lengths_size) {\n  var start_table = table;\n  var code;            /* current table entry */\n  var len;             /* current code length */\n  var symbol;          /* symbol index in original or sorted table */\n  var key;             /* reversed prefix code */\n  var step;            /* step size to replicate values in current table */\n  var low;             /* low bits for current root entry */\n  var mask;            /* mask for low bits */\n  var table_bits;      /* key length of current table */\n  var table_size;      /* size of current table */\n  var total_size;      /* sum of root table size and 2nd level table sizes */\n  var sorted;          /* symbols sorted by code length */\n  var count = new Int32Array(MAX_LENGTH + 1);  /* number of codes of each length */\n  var offset = new Int32Array(MAX_LENGTH + 1);  /* offsets in sorted table for each length */\n\n  sorted = new Int32Array(code_lengths_size);\n\n  /* build histogram of code lengths */\n  for (symbol = 0; symbol < code_lengths_size; symbol++) {\n    count[code_lengths[symbol]]++;\n  }\n\n  /* generate offsets into sorted symbol table by code length */\n  offset[1] = 0;\n  for (len = 1; len < MAX_LENGTH; len++) {\n    offset[len + 1] = offset[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (symbol = 0; symbol < code_lengths_size; symbol++) {\n    if (code_lengths[symbol] !== 0) {\n      sorted[offset[code_lengths[symbol]]++] = symbol;\n    }\n  }\n  \n  table_bits = root_bits;\n  table_size = 1 << table_bits;\n  total_size = table_size;\n\n  /* special case code with only one value */\n  if (offset[MAX_LENGTH] === 1) {\n    for (key = 0; key < total_size; ++key) {\n      root_table[table + key] = new HuffmanCode(0, sorted[0] & 0xffff);\n    }\n    \n    return total_size;\n  }\n\n  /* fill in root table */\n  key = 0;\n  symbol = 0;\n  for (len = 1, step = 2; len <= root_bits; ++len, step <<= 1) {\n    for (; count[len] > 0; --count[len]) {\n      code = new HuffmanCode(len & 0xff, sorted[symbol++] & 0xffff);\n      ReplicateValue(root_table, table + key, step, table_size, code);\n      key = GetNextKey(key, len);\n    }\n  }\n\n  /* fill in 2nd level tables and add pointers to root table */\n  mask = total_size - 1;\n  low = -1;\n  for (len = root_bits + 1, step = 2; len <= MAX_LENGTH; ++len, step <<= 1) {\n    for (; count[len] > 0; --count[len]) {\n      if ((key & mask) !== low) {\n        table += table_size;\n        table_bits = NextTableBitSize(count, len, root_bits);\n        table_size = 1 << table_bits;\n        total_size += table_size;\n        low = key & mask;\n        root_table[start_table + low] = new HuffmanCode((table_bits + root_bits) & 0xff, ((table - start_table) - low) & 0xffff);\n      }\n      code = new HuffmanCode((len - root_bits) & 0xff, sorted[symbol++] & 0xffff);\n      ReplicateValue(root_table, table + (key >> root_bits), step, table_size, code);\n      key = GetNextKey(key, len);\n    }\n  }\n  \n  return total_size;\n}\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Lookup table to map the previous two bytes to a context id.\n\n   There are four different context modeling modes defined here:\n     CONTEXT_LSB6: context id is the least significant 6 bits of the last byte,\n     CONTEXT_MSB6: context id is the most significant 6 bits of the last byte,\n     CONTEXT_UTF8: second-order context model tuned for UTF8-encoded text,\n     CONTEXT_SIGNED: second-order context model tuned for signed integers.\n\n   The context id for the UTF8 context model is calculated as follows. If p1\n   and p2 are the previous two bytes, we calcualte the context as\n\n     context = kContextLookup[p1] | kContextLookup[p2 + 256].\n\n   If the previous two bytes are ASCII characters (i.e. < 128), this will be\n   equivalent to\n\n     context = 4 * context1(p1) + context2(p2),\n\n   where context1 is based on the previous byte in the following way:\n\n     0  : non-ASCII control\n     1  : \\t, \\n, \\r\n     2  : space\n     3  : other punctuation\n     4  : \" '\n     5  : %\n     6  : ( < [ {\n     7  : ) > ] }\n     8  : , ; :\n     9  : .\n     10 : =\n     11 : number\n     12 : upper-case vowel\n     13 : upper-case consonant\n     14 : lower-case vowel\n     15 : lower-case consonant\n\n   and context2 is based on the second last byte:\n\n     0 : control, space\n     1 : punctuation\n     2 : upper-case letter, number\n     3 : lower-case letter\n\n   If the last byte is ASCII, and the second last byte is not (in a valid UTF8\n   stream it will be a continuation byte, value between 128 and 191), the\n   context is the same as if the second last byte was an ASCII control or space.\n\n   If the last byte is a UTF8 lead byte (value >= 192), then the next byte will\n   be a continuation byte and the context id is 2 or 3 depending on the LSB of\n   the last byte and to a lesser extent on the second last byte if it is ASCII.\n\n   If the last byte is a UTF8 continuation byte, the second last byte can be:\n     - continuation byte: the next byte is probably ASCII or lead byte (assuming\n       4-byte UTF8 characters are rare) and the context id is 0 or 1.\n     - lead byte (192 - 207): next byte is ASCII or lead byte, context is 0 or 1\n     - lead byte (208 - 255): next byte is continuation byte, context is 2 or 3\n\n   The possible value combinations of the previous two bytes, the range of\n   context ids and the type of the next byte is summarized in the table below:\n\n   |--------\\-----------------------------------------------------------------|\n   |         \\                         Last byte                              |\n   | Second   \\---------------------------------------------------------------|\n   | last byte \\    ASCII            |   cont. byte        |   lead byte      |\n   |            \\   (0-127)          |   (128-191)         |   (192-)         |\n   |=============|===================|=====================|==================|\n   |  ASCII      | next: ASCII/lead  |  not valid          |  next: cont.     |\n   |  (0-127)    | context: 4 - 63   |                     |  context: 2 - 3  |\n   |-------------|-------------------|---------------------|------------------|\n   |  cont. byte | next: ASCII/lead  |  next: ASCII/lead   |  next: cont.     |\n   |  (128-191)  | context: 4 - 63   |  context: 0 - 1     |  context: 2 - 3  |\n   |-------------|-------------------|---------------------|------------------|\n   |  lead byte  | not valid         |  next: ASCII/lead   |  not valid       |\n   |  (192-207)  |                   |  context: 0 - 1     |                  |\n   |-------------|-------------------|---------------------|------------------|\n   |  lead byte  | not valid         |  next: cont.        |  not valid       |\n   |  (208-)     |                   |  context: 2 - 3     |                  |\n   |-------------|-------------------|---------------------|------------------|\n\n   The context id for the signed context mode is calculated as:\n\n     context = (kContextLookup[512 + p1] << 3) | kContextLookup[512 + p2].\n\n   For any context modeling modes, the context ids can be calculated by |-ing\n   together two lookups from one table using context model dependent offsets:\n\n     context = kContextLookup[offset1 + p1] | kContextLookup[offset2 + p2].\n\n   where offset1 and offset2 are dependent on the context mode.\n*/\n\nvar CONTEXT_LSB6         = 0;\nvar CONTEXT_MSB6         = 1;\nvar CONTEXT_UTF8         = 2;\nvar CONTEXT_SIGNED       = 3;\n\n/* Common context lookup table for all context modes. */\nexports.lookup = new Uint8Array([\n  /* CONTEXT_UTF8, last byte. */\n  /* ASCII range. */\n   0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  0,  0,  4,  0,  0,\n   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n   8, 12, 16, 12, 12, 20, 12, 16, 24, 28, 12, 12, 32, 12, 36, 12,\n  44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 32, 32, 24, 40, 28, 12,\n  12, 48, 52, 52, 52, 48, 52, 52, 52, 48, 52, 52, 52, 52, 52, 48,\n  52, 52, 52, 52, 52, 48, 52, 52, 52, 52, 52, 24, 12, 28, 12, 12,\n  12, 56, 60, 60, 60, 56, 60, 60, 60, 56, 60, 60, 60, 60, 60, 56,\n  60, 60, 60, 60, 60, 56, 60, 60, 60, 60, 60, 24, 12, 28, 12,  0,\n  /* UTF8 continuation byte range. */\n  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n  /* UTF8 lead byte range. */\n  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n  /* CONTEXT_UTF8 second last byte. */\n  /* ASCII range. */\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,\n  1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 0,\n  /* UTF8 continuation byte range. */\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  /* UTF8 lead byte range. */\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  /* CONTEXT_SIGNED, second last byte. */\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7,\n  /* CONTEXT_SIGNED, last byte, same as the above values shifted by 3 bits. */\n   0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\n  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\n  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\n  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\n  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,\n  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,\n  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,\n  48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 56,\n  /* CONTEXT_LSB6, last byte. */\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n  /* CONTEXT_MSB6, last byte. */\n   0,  0,  0,  0,  1,  1,  1,  1,  2,  2,  2,  2,  3,  3,  3,  3,\n   4,  4,  4,  4,  5,  5,  5,  5,  6,  6,  6,  6,  7,  7,  7,  7,\n   8,  8,  8,  8,  9,  9,  9,  9, 10, 10, 10, 10, 11, 11, 11, 11,\n  12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15,\n  16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19,\n  20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 23, 23,\n  24, 24, 24, 24, 25, 25, 25, 25, 26, 26, 26, 26, 27, 27, 27, 27,\n  28, 28, 28, 28, 29, 29, 29, 29, 30, 30, 30, 30, 31, 31, 31, 31,\n  32, 32, 32, 32, 33, 33, 33, 33, 34, 34, 34, 34, 35, 35, 35, 35,\n  36, 36, 36, 36, 37, 37, 37, 37, 38, 38, 38, 38, 39, 39, 39, 39,\n  40, 40, 40, 40, 41, 41, 41, 41, 42, 42, 42, 42, 43, 43, 43, 43,\n  44, 44, 44, 44, 45, 45, 45, 45, 46, 46, 46, 46, 47, 47, 47, 47,\n  48, 48, 48, 48, 49, 49, 49, 49, 50, 50, 50, 50, 51, 51, 51, 51,\n  52, 52, 52, 52, 53, 53, 53, 53, 54, 54, 54, 54, 55, 55, 55, 55,\n  56, 56, 56, 56, 57, 57, 57, 57, 58, 58, 58, 58, 59, 59, 59, 59,\n  60, 60, 60, 60, 61, 61, 61, 61, 62, 62, 62, 62, 63, 63, 63, 63,\n  /* CONTEXT_{M,L}SB6, second last byte, */\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n]);\n\nexports.lookupOffsets = new Uint16Array([\n  /* CONTEXT_LSB6 */\n  1024, 1536,\n  /* CONTEXT_MSB6 */\n  1280, 1536,\n  /* CONTEXT_UTF8 */\n  0, 256,\n  /* CONTEXT_SIGNED */\n  768, 512,\n]);\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Lookup tables to map prefix codes to value ranges. This is used during\n   decoding of the block lengths, literal insertion lengths and copy lengths.\n*/\n\n/* Represents the range of values belonging to a prefix code: */\n/* [offset, offset + 2^nbits) */\nfunction PrefixCodeRange(offset, nbits) {\n  this.offset = offset;\n  this.nbits = nbits;\n}\n\nexports.kBlockLengthPrefixCode = [\n  new PrefixCodeRange(1, 2), new PrefixCodeRange(5, 2), new PrefixCodeRange(9, 2), new PrefixCodeRange(13, 2),\n  new PrefixCodeRange(17, 3), new PrefixCodeRange(25, 3), new PrefixCodeRange(33, 3), new PrefixCodeRange(41, 3),\n  new PrefixCodeRange(49, 4), new PrefixCodeRange(65, 4), new PrefixCodeRange(81, 4), new PrefixCodeRange(97, 4),\n  new PrefixCodeRange(113, 5), new PrefixCodeRange(145, 5), new PrefixCodeRange(177, 5), new PrefixCodeRange(209, 5),\n  new PrefixCodeRange(241, 6), new PrefixCodeRange(305, 6), new PrefixCodeRange(369, 7), new PrefixCodeRange(497, 8),\n  new PrefixCodeRange(753, 9), new PrefixCodeRange(1265, 10), new PrefixCodeRange(2289, 11), new PrefixCodeRange(4337, 12),\n  new PrefixCodeRange(8433, 13), new PrefixCodeRange(16625, 24)\n];\n\nexports.kInsertLengthPrefixCode = [\n  new PrefixCodeRange(0, 0), new PrefixCodeRange(1, 0), new PrefixCodeRange(2, 0), new PrefixCodeRange(3, 0),\n  new PrefixCodeRange(4, 0), new PrefixCodeRange(5, 0), new PrefixCodeRange(6, 1), new PrefixCodeRange(8, 1),\n  new PrefixCodeRange(10, 2), new PrefixCodeRange(14, 2), new PrefixCodeRange(18, 3), new PrefixCodeRange(26, 3),\n  new PrefixCodeRange(34, 4), new PrefixCodeRange(50, 4), new PrefixCodeRange(66, 5), new PrefixCodeRange(98, 5),\n  new PrefixCodeRange(130, 6), new PrefixCodeRange(194, 7), new PrefixCodeRange(322, 8), new PrefixCodeRange(578, 9),\n  new PrefixCodeRange(1090, 10), new PrefixCodeRange(2114, 12), new PrefixCodeRange(6210, 14), new PrefixCodeRange(22594, 24),\n];\n\nexports.kCopyLengthPrefixCode = [\n  new PrefixCodeRange(2, 0), new PrefixCodeRange(3, 0), new PrefixCodeRange(4, 0), new PrefixCodeRange(5, 0),\n  new PrefixCodeRange(6, 0), new PrefixCodeRange(7, 0), new PrefixCodeRange(8, 0), new PrefixCodeRange(9, 0),\n  new PrefixCodeRange(10, 1), new PrefixCodeRange(12, 1), new PrefixCodeRange(14, 2), new PrefixCodeRange(18, 2),\n  new PrefixCodeRange(22, 3), new PrefixCodeRange(30, 3), new PrefixCodeRange(38, 4), new PrefixCodeRange(54, 4),\n  new PrefixCodeRange(70, 5), new PrefixCodeRange(102, 5), new PrefixCodeRange(134, 6), new PrefixCodeRange(198, 7),\n  new PrefixCodeRange(326, 8), new PrefixCodeRange(582, 9), new PrefixCodeRange(1094, 10), new PrefixCodeRange(2118, 24),\n];\n\nexports.kInsertRangeLut = [\n  0, 0, 8, 8, 0, 16, 8, 16, 16,\n];\n\nexports.kCopyRangeLut = [\n  0, 8, 0, 8, 16, 0, 16, 8, 16,\n];\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Transformations on dictionary words.\n*/\n\nvar BrotliDictionary = require('./dictionary');\n\nvar kIdentity       = 0;\nvar kOmitLast1      = 1;\nvar kOmitLast2      = 2;\nvar kOmitLast3      = 3;\nvar kOmitLast4      = 4;\nvar kOmitLast5      = 5;\nvar kOmitLast6      = 6;\nvar kOmitLast7      = 7;\nvar kOmitLast8      = 8;\nvar kOmitLast9      = 9;\nvar kUppercaseFirst = 10;\nvar kUppercaseAll   = 11;\nvar kOmitFirst1     = 12;\nvar kOmitFirst2     = 13;\nvar kOmitFirst3     = 14;\nvar kOmitFirst4     = 15;\nvar kOmitFirst5     = 16;\nvar kOmitFirst6     = 17;\nvar kOmitFirst7     = 18;\nvar kOmitFirst8     = 19;\nvar kOmitFirst9     = 20;\n\nfunction Transform(prefix, transform, suffix) {\n  this.prefix = new Uint8Array(prefix.length);\n  this.transform = transform;\n  this.suffix = new Uint8Array(suffix.length);\n  \n  for (var i = 0; i < prefix.length; i++)\n    this.prefix[i] = prefix.charCodeAt(i);\n  \n  for (var i = 0; i < suffix.length; i++)\n    this.suffix[i] = suffix.charCodeAt(i);\n}\n\nvar kTransforms = [\n     new Transform(         \"\", kIdentity,       \"\"           ),\n     new Transform(         \"\", kIdentity,       \" \"          ),\n     new Transform(        \" \", kIdentity,       \" \"          ),\n     new Transform(         \"\", kOmitFirst1,     \"\"           ),\n     new Transform(         \"\", kUppercaseFirst, \" \"          ),\n     new Transform(         \"\", kIdentity,       \" the \"      ),\n     new Transform(        \" \", kIdentity,       \"\"           ),\n     new Transform(       \"s \", kIdentity,       \" \"          ),\n     new Transform(         \"\", kIdentity,       \" of \"       ),\n     new Transform(         \"\", kUppercaseFirst, \"\"           ),\n     new Transform(         \"\", kIdentity,       \" and \"      ),\n     new Transform(         \"\", kOmitFirst2,     \"\"           ),\n     new Transform(         \"\", kOmitLast1,      \"\"           ),\n     new Transform(       \", \", kIdentity,       \" \"          ),\n     new Transform(         \"\", kIdentity,       \", \"         ),\n     new Transform(        \" \", kUppercaseFirst, \" \"          ),\n     new Transform(         \"\", kIdentity,       \" in \"       ),\n     new Transform(         \"\", kIdentity,       \" to \"       ),\n     new Transform(       \"e \", kIdentity,       \" \"          ),\n     new Transform(         \"\", kIdentity,       \"\\\"\"         ),\n     new Transform(         \"\", kIdentity,       \".\"          ),\n     new Transform(         \"\", kIdentity,       \"\\\">\"        ),\n     new Transform(         \"\", kIdentity,       \"\\n\"         ),\n     new Transform(         \"\", kOmitLast3,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \"]\"          ),\n     new Transform(         \"\", kIdentity,       \" for \"      ),\n     new Transform(         \"\", kOmitFirst3,     \"\"           ),\n     new Transform(         \"\", kOmitLast2,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \" a \"        ),\n     new Transform(         \"\", kIdentity,       \" that \"     ),\n     new Transform(        \" \", kUppercaseFirst, \"\"           ),\n     new Transform(         \"\", kIdentity,       \". \"         ),\n     new Transform(        \".\", kIdentity,       \"\"           ),\n     new Transform(        \" \", kIdentity,       \", \"         ),\n     new Transform(         \"\", kOmitFirst4,     \"\"           ),\n     new Transform(         \"\", kIdentity,       \" with \"     ),\n     new Transform(         \"\", kIdentity,       \"'\"          ),\n     new Transform(         \"\", kIdentity,       \" from \"     ),\n     new Transform(         \"\", kIdentity,       \" by \"       ),\n     new Transform(         \"\", kOmitFirst5,     \"\"           ),\n     new Transform(         \"\", kOmitFirst6,     \"\"           ),\n     new Transform(    \" the \", kIdentity,       \"\"           ),\n     new Transform(         \"\", kOmitLast4,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \". The \"     ),\n     new Transform(         \"\", kUppercaseAll,   \"\"           ),\n     new Transform(         \"\", kIdentity,       \" on \"       ),\n     new Transform(         \"\", kIdentity,       \" as \"       ),\n     new Transform(         \"\", kIdentity,       \" is \"       ),\n     new Transform(         \"\", kOmitLast7,      \"\"           ),\n     new Transform(         \"\", kOmitLast1,      \"ing \"       ),\n     new Transform(         \"\", kIdentity,       \"\\n\\t\"       ),\n     new Transform(         \"\", kIdentity,       \":\"          ),\n     new Transform(        \" \", kIdentity,       \". \"         ),\n     new Transform(         \"\", kIdentity,       \"ed \"        ),\n     new Transform(         \"\", kOmitFirst9,     \"\"           ),\n     new Transform(         \"\", kOmitFirst7,     \"\"           ),\n     new Transform(         \"\", kOmitLast6,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \"(\"          ),\n     new Transform(         \"\", kUppercaseFirst, \", \"         ),\n     new Transform(         \"\", kOmitLast8,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \" at \"       ),\n     new Transform(         \"\", kIdentity,       \"ly \"        ),\n     new Transform(    \" the \", kIdentity,       \" of \"       ),\n     new Transform(         \"\", kOmitLast5,      \"\"           ),\n     new Transform(         \"\", kOmitLast9,      \"\"           ),\n     new Transform(        \" \", kUppercaseFirst, \", \"         ),\n     new Transform(         \"\", kUppercaseFirst, \"\\\"\"         ),\n     new Transform(        \".\", kIdentity,       \"(\"          ),\n     new Transform(         \"\", kUppercaseAll,   \" \"          ),\n     new Transform(         \"\", kUppercaseFirst, \"\\\">\"        ),\n     new Transform(         \"\", kIdentity,       \"=\\\"\"        ),\n     new Transform(        \" \", kIdentity,       \".\"          ),\n     new Transform(    \".com/\", kIdentity,       \"\"           ),\n     new Transform(    \" the \", kIdentity,       \" of the \"   ),\n     new Transform(         \"\", kUppercaseFirst, \"'\"          ),\n     new Transform(         \"\", kIdentity,       \". This \"    ),\n     new Transform(         \"\", kIdentity,       \",\"          ),\n     new Transform(        \".\", kIdentity,       \" \"          ),\n     new Transform(         \"\", kUppercaseFirst, \"(\"          ),\n     new Transform(         \"\", kUppercaseFirst, \".\"          ),\n     new Transform(         \"\", kIdentity,       \" not \"      ),\n     new Transform(        \" \", kIdentity,       \"=\\\"\"        ),\n     new Transform(         \"\", kIdentity,       \"er \"        ),\n     new Transform(        \" \", kUppercaseAll,   \" \"          ),\n     new Transform(         \"\", kIdentity,       \"al \"        ),\n     new Transform(        \" \", kUppercaseAll,   \"\"           ),\n     new Transform(         \"\", kIdentity,       \"='\"         ),\n     new Transform(         \"\", kUppercaseAll,   \"\\\"\"         ),\n     new Transform(         \"\", kUppercaseFirst, \". \"         ),\n     new Transform(        \" \", kIdentity,       \"(\"          ),\n     new Transform(         \"\", kIdentity,       \"ful \"       ),\n     new Transform(        \" \", kUppercaseFirst, \". \"         ),\n     new Transform(         \"\", kIdentity,       \"ive \"       ),\n     new Transform(         \"\", kIdentity,       \"less \"      ),\n     new Transform(         \"\", kUppercaseAll,   \"'\"          ),\n     new Transform(         \"\", kIdentity,       \"est \"       ),\n     new Transform(        \" \", kUppercaseFirst, \".\"          ),\n     new Transform(         \"\", kUppercaseAll,   \"\\\">\"        ),\n     new Transform(        \" \", kIdentity,       \"='\"         ),\n     new Transform(         \"\", kUppercaseFirst, \",\"          ),\n     new Transform(         \"\", kIdentity,       \"ize \"       ),\n     new Transform(         \"\", kUppercaseAll,   \".\"          ),\n     new Transform( \"\\xc2\\xa0\", kIdentity,       \"\"           ),\n     new Transform(        \" \", kIdentity,       \",\"          ),\n     new Transform(         \"\", kUppercaseFirst, \"=\\\"\"        ),\n     new Transform(         \"\", kUppercaseAll,   \"=\\\"\"        ),\n     new Transform(         \"\", kIdentity,       \"ous \"       ),\n     new Transform(         \"\", kUppercaseAll,   \", \"         ),\n     new Transform(         \"\", kUppercaseFirst, \"='\"         ),\n     new Transform(        \" \", kUppercaseFirst, \",\"          ),\n     new Transform(        \" \", kUppercaseAll,   \"=\\\"\"        ),\n     new Transform(        \" \", kUppercaseAll,   \", \"         ),\n     new Transform(         \"\", kUppercaseAll,   \",\"          ),\n     new Transform(         \"\", kUppercaseAll,   \"(\"          ),\n     new Transform(         \"\", kUppercaseAll,   \". \"         ),\n     new Transform(        \" \", kUppercaseAll,   \".\"          ),\n     new Transform(         \"\", kUppercaseAll,   \"='\"         ),\n     new Transform(        \" \", kUppercaseAll,   \". \"         ),\n     new Transform(        \" \", kUppercaseFirst, \"=\\\"\"        ),\n     new Transform(        \" \", kUppercaseAll,   \"='\"         ),\n     new Transform(        \" \", kUppercaseFirst, \"='\"         )\n];\n\nexports.kTransforms = kTransforms;\nexports.kNumTransforms = kTransforms.length;\n\nfunction ToUpperCase(p, i) {\n  if (p[i] < 0xc0) {\n    if (p[i] >= 97 && p[i] <= 122) {\n      p[i] ^= 32;\n    }\n    return 1;\n  }\n  \n  /* An overly simplified uppercasing model for utf-8. */\n  if (p[i] < 0xe0) {\n    p[i + 1] ^= 32;\n    return 2;\n  }\n  \n  /* An arbitrary transform for three byte characters. */\n  p[i + 2] ^= 5;\n  return 3;\n}\n\nexports.transformDictionaryWord = function(dst, idx, word, len, transform) {\n  var prefix = kTransforms[transform].prefix;\n  var suffix = kTransforms[transform].suffix;\n  var t = kTransforms[transform].transform;\n  var skip = t < kOmitFirst1 ? 0 : t - (kOmitFirst1 - 1);\n  var i = 0;\n  var start_idx = idx;\n  var uppercase;\n  \n  if (skip > len) {\n    skip = len;\n  }\n  \n  var prefix_pos = 0;\n  while (prefix_pos < prefix.length) {\n    dst[idx++] = prefix[prefix_pos++];\n  }\n  \n  word += skip;\n  len -= skip;\n  \n  if (t <= kOmitLast9) {\n    len -= t;\n  }\n  \n  for (i = 0; i < len; i++) {\n    dst[idx++] = BrotliDictionary.dictionary[word + i];\n  }\n  \n  uppercase = idx - len;\n  \n  if (t === kUppercaseFirst) {\n    ToUpperCase(dst, uppercase);\n  } else if (t === kUppercaseAll) {\n    while (len > 0) {\n      var step = ToUpperCase(dst, uppercase);\n      uppercase += step;\n      len -= step;\n    }\n  }\n  \n  var suffix_pos = 0;\n  while (suffix_pos < suffix.length) {\n    dst[idx++] = suffix[suffix_pos++];\n  }\n  \n  return idx - start_idx;\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":[],"version":3,"file":"index.0641b553.js.map","sourceRoot":"/__parcel_source_root/"}